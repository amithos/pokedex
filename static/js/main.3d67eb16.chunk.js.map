{"version":3,"sources":["components/SelectedPokemon/SelectedPokemon.tsx","api/pokemon.ts","api/api.ts","components/PokemonCard/PokemonCard.tsx","components/PokemonsList/PokemonsList.tsx","App.tsx","index.tsx"],"names":["SelectedPokemon","selectedPokemonId","className","getPokemonById","id","endpoint","fetch","options","then","response","ok","json","Promise","reject","statusText","PokemonCard","imageSource","name","types","src","alt","map","type","PokemonList","onSelectPokemon","onFilter","useState","pokemons","setPokemons","loadPokemons","offset","length","requests","i","push","all","newPokemons","cards","pokemon","sprites","other","front_default","sort","typeA","typeB","slot","visiblePokemons","useEffect","console","log","onClick","App","setSelectedPokemonId","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAMaA,EAA8C,SAAC,GAExC,EADlBC,kBAQA,OACE,yBAASC,UAAU,mBAAnB,SACE,yBAASA,UAAU,8B,cCbZC,EAAiB,SAACC,GAC7B,OCHuBC,EDGR,GAAD,OAHA,YAGA,OAAcD,GCDrBE,MAAM,GAAD,OAJG,8BAIH,OAAeD,GAAYE,GACpCC,MAAK,SAAAC,GAEJ,OAAKA,EAASC,GAIPD,EAASE,OAHPC,QAAQC,OAAOJ,EAASK,eANhB,IAAET,EAAkBE,GCM9BQ,G,MAAyC,SAAC,GAElC,IADnBC,EACkB,EADlBA,YAAaC,EACK,EADLA,KAAMC,EACD,EADCA,MACD,EADQd,GAI1B,OACE,yBAASF,UAAU,eAAnB,SACE,sBAAKA,UAAU,wBAAf,UACE,qBACEA,UAAU,sBACViB,IAAKH,EACLI,IAAKH,IAEP,mBAAGf,UAAU,qBAAb,SACGe,IAGH,qBAAKf,UAAU,sBAAf,SACGgB,EAAMG,KAAI,SAACC,GAAD,OACT,sBAEEpB,UAAS,iDAA4CoB,EAAKA,KAAKL,MAFjE,SAIGK,EAAKA,KAAKL,MAHNK,EAAKA,KAAKL,kBCdhBM,G,MAAsC,SAAC,GAGhC,EAFlBC,gBAEkB,EADlBC,SACmB,IAEnB,EAAgCC,mBAA4B,IAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,WAOnB,IALA,IACIC,EAASH,EAASI,OAAS,EAEzBC,EAAW,GAERC,EAAI,EAAGA,EALF,GAKaA,IACzBD,EAASE,KAAK/B,EAAe2B,IAC7BA,IAGFlB,QAAQuB,IAAIH,GACTxB,MAAK,SAAC4B,GACL,IAAMC,EAAQD,EAAYf,KACxB,SAACiB,GACC,IAAOrB,EAAmBqB,EAAnBrB,KAAMb,EAAakC,EAAblC,GAAIc,EAASoB,EAATpB,MAEjB,MAAO,CACLF,YAAasB,EAAQC,QAAQC,MAAM,oBAAoBC,cACvDxB,OACAC,MAAOA,EAAMwB,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,KAAOD,EAAMC,QACvDzC,SAKN,OAAOwB,EAAY,GAAD,mBAAKD,GAAL,YAAkBU,SAItCS,EAAe,YAAOnB,GAW1B,OALAoB,oBAAUlB,EAAc,IAExBmB,QAAQC,IAAIH,GAIV,yBAAS5C,UAAU,eAAnB,SACE,sBAAKA,UAAU,wBAAf,UAEE,oBAAIA,UAAU,sBAAd,SACG4C,EAAgBzB,KAAI,SAACiB,GAAD,OACnB,oBAAIpC,UAAU,qBAAd,SACE,cAAC,EAAD,eAAiBoC,KADqBA,EAAQlC,SAMpD,wBACEF,UAAU,uBACVgD,QAASrB,EAFX,8BC5COsB,EArBH,WAEV,MAAkDzB,mBAAiB,GAAnE,mBAAOzB,EAAP,KAA0BmD,EAA1B,KACA,EAA4B1B,mBAAoB,MAAhD,mBAAO2B,EAAP,UAIA,OACE,sBAAKnD,UAAU,MAAf,UAEE,cAAC,EAAD,CAAasB,gBALK,SAACpB,GAAD,OAAgBgD,EAAqBhD,IAKVqB,SAAU4B,IAEtDpD,EACC,cAAC,EAAD,CAAiBA,kBAAmBA,IAEpC,gECpBRqD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3d67eb16.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\n\nimport {iSelectedPokemon, iStats} from '../../types/types';\n\nimport './SelectedPokemon.scss';\n\nexport const SelectedPokemon: React.FC<iSelectedPokemon> = ({\n  selectedPokemonId\n}): ReactElement => {\n\n\n  const getStatByName = (name: string) => {\n    return (element: iStats) => element.stat.name === name;\n  }\n  \n  return (\n    <section className=\"selected-pokemon\">\n      <article className=\"selected-pokemon__card\">\n        {/* Підгружати одного покемона по індексу? - YES*/}\n\n        {/* <article className='pokemon-list__selected-card'>\n              <img\n                className=\"pokemon-list__image\"\n                src={imageSource}\n                alt={name}/>\n              <table className=\"pokemon-list__table\">\n                <caption className=\"pokemon-list__caption\"></caption>\n\n                <tbody>\n                  <tr className=\"pokemon-list__row\">\n                    <td className=\"pokemon-list__datum\">Type</td>\n                    <td className=\"pokemon-list__value\">\n                      {types.find(\n                        (type: iTypes) => type.slot === 1\n                      )!.type.name\n                      }\n                    </td>\n                  </tr>\n\n                  <tr className=\"pokemon-list__row\">\n                    <td className=\"pokemon-list__datum\">Attack</td>\n                    <td className=\"pokemon-list__value\">\n                      {stats.find(getStatByName('attack'))!.base_stat}\n                    </td>\n                  </tr>\n\n                  <tr className=\"pokemon-list__row\">\n                    <td className=\"pokemon-list__datum\">Defense</td>\n                    <td className=\"pokemon-list__value\">\n                      {stats.find(getStatByName('defense'))!.base_stat}\n                    </td>\n                  </tr>\n\n                  <tr className=\"pokemon-list__row\">\n                    <td className=\"pokemon-list__datum\">HP</td>\n                    <td className=\"pokemon-list__value\">\n                      {stats.find(getStatByName('hp'))!.base_stat}\n                    </td>\n                  </tr>\n\n                  <tr className=\"pokemon-list__row\">\n                    <td className=\"pokemon-list__datum\">SP Attack</td>\n                    <td className=\"pokemon-list__value\">\n                      {stats.find(getStatByName('special-attack'))!.base_stat}\n                    </td>\n                  </tr>\n\n                  <tr className=\"pokemon-list__row\">\n                    <td className=\"pokemon-list__datum\">SD Defense</td>\n                    <td className=\"pokemon-list__value\">\n                      {stats.find(getStatByName('special-defense'))!.base_stat}\n                    </td>\n                  </tr>\n\n                  <tr className=\"pokemon-list__row\">\n                    <td className=\"pokemon-list__datum\">Speed</td>\n                    <td className=\"pokemon-list__value\">\n                      {stats.find(getStatByName('speed'))!.base_stat}\n                    </td>\n                  </tr>\n\n                  <tr className=\"pokemon-list__row\">\n                    <td className=\"pokemon-list__datum\">Weight</td>\n                    <td className=\"pokemon-list__value\">\n                      {weight}\n                    </td>\n                  </tr>\n\n                  <tr className=\"pokemon-list__row\">\n                    <td className=\"pokemon-list__datum\">Total Moves</td>\n                    <td className=\"pokemon-list__value\">\n                      {moves}\n                    </td>\n                  </tr>\n                </tbody>\n                    \n              </table>\n            </article> */}\n\n      </article>\n    </section>\n  )\n}","import { request } from \"./api\";\n\nconst pokemon = 'pokemon/';\n\nexport const getPokemonById = (id: number): Promise<any> => {\n  return request(`${pokemon}${id}`)\n}\n","const BASE_URL = 'https://pokeapi.co/api/v2/';\n\nexport const request = ( endpoint: string, options?: object): Promise<any> => {  \n  \n  return fetch(`${BASE_URL}${endpoint}`, options)\n    .then(response => {\n    \n      if (!response.ok) {\n        return Promise.reject(response.statusText);\n      }\n      \n      return response.json();\n    }\n  )\n}\n","import { ReactElement } from \"react\"\n\nimport { PokemonCardType } from \"../../types/PokemonCardType\" \nimport { iTypes } from \"../../types/types\"\n\nimport './PokemonCard.scss';\n\n\nexport const PokemonCard: React.FC<PokemonCardType> = ({\n  imageSource, name, types, id\n}): ReactElement => {\n  \n  \n  return (\n    <article className=\"pokemon-card\">\n      <div className=\"pokemon-card__content\">\n        <img \n          className=\"pokemon-card__image\"\n          src={imageSource}\n          alt={name}\n        />\n        <p className=\"pokemon-card__name\">\n          {name}\n        </p>\n\n        <div className=\"pokemon-card__types\">\n          {types.map((type: iTypes) => (\n            <span\n              key={type.type.name} \n              className={`pokemon-card__type pokemon-card__type--${type.type.name}`}\n            >\n              {type.type.name}\n            </span>\n          ))}\n        </div>\n\n      </div>\n    </article>\n  ) \n}\n\n\n","import { ReactElement, useState, useEffect } from 'react';\n\nimport { iPokemonList } from '../../types/types';\nimport { PokemonType } from '../../types/PokemonType';\nimport { PokemonCardType } from '../../types/PokemonCardType';\n\nimport { getPokemonById } from '../../api/pokemon';\n\nimport { PokemonCard } from '../PokemonCard';\n\nimport './PokemonList.scss';\n\n\n\nexport const PokemonList: React.FC<iPokemonList> = ({\n  onSelectPokemon,\n  onFilter,\n}): ReactElement => {\n  \n  const [pokemons, setPokemons] = useState<PokemonCardType[]>([]);\n  \n  const loadPokemons = (): void => {\n\n    const limit = 12;\n    let offset = pokemons.length + 1;\n    \n    const requests = [];\n\n    for (let i = 0; i < limit; i++) {\n      requests.push(getPokemonById(offset));\n      offset++;\n    }\n\n    Promise.all(requests)\n      .then((newPokemons: PokemonType[]) => {\n        const cards = newPokemons.map(\n          (pokemon: PokemonType): PokemonCardType => {\n            const {name, id, types} = pokemon;\n\n            return {\n              imageSource: pokemon.sprites.other['official-artwork'].front_default,\n              name,\n              types: types.sort((typeA, typeB) => typeA.slot - typeB.slot),\n              id,\n            }\n          }\n        );\n\n        return setPokemons([...pokemons, ...cards]);\n      });\n  }\n           \n  let visiblePokemons = [...pokemons];\n\n  // if (onFilter) {\n  //   visiblePokemons = visiblePokemons.filter(onFilter);\n  // }\n\n  useEffect(loadPokemons, []);\n\n  console.log(visiblePokemons);\n  \n  \n  return (\n    <section className=\"pokemon-list\">\n      <div className=\"pokemon-list__content\">\n        \n        <ul className=\"pokemon-list__cards\">\n          {visiblePokemons.map((pokemon: PokemonCardType) => (\n            <li className=\"pokemon-list__item\" key={pokemon.id}>\n              <PokemonCard {...pokemon}/>\n            </li>\n          ))}\n        </ul>  \n              \n        <button\n          className=\"pokemon-list__button\"\n          onClick={loadPokemons}\n        >\n          Load More\n        </button>\n          \n        {/* <button className=\"PokemonList__button\">Show Less</button> \n          Як варіант\n        */}\n      </div>\n    </section>\n  );\n}\n","import React from 'react';\nimport { ReactElement, useState } from 'react';\n\nimport './App.css';\n\nimport { SelectedPokemon } from './components/SelectedPokemon';\nimport { PokemonList } from './components/PokemonsList';\n\n//type Filter = () =>\n\nconst App = (): ReactElement => {\n\n  const [selectedPokemonId, setSelectedPokemonId] = useState<number>(0);\n  const [filter, setFilter] = useState<any| null>(null);\n\n  const selectPokemon = (id: number) => setSelectedPokemonId(id);\n  \n  return (\n    <div className=\"App\">\n\n      <PokemonList onSelectPokemon={selectPokemon} onFilter={filter}/>\n\n      {selectedPokemonId ? (\n        <SelectedPokemon selectedPokemonId={selectedPokemonId}/>\n      ) : (\n        <p>Please, choose some pokemon</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}